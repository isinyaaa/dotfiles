[user]
    name = Isabella Basso
[sendemail]
    confirm = auto
    smtpEncryption = ssl
    smtpServerPort = 465
    chainReplyTo = false
[include]
    path = ~/.gitconfig-common
[includeIf "gitdir:~/repos/redhat/"]
    path = ~/.gitconfig-work
[includeIf "gitdir:~/repos/usp/"]
    path = ~/.gitconfig-usp
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    pager = true
    ui = auto
[commit]
    gpgSign = true
[credential]
    helper = !pass-git-helper
[core]
    autocrlf = input
    pager = diff-so-fancy | less -RFX
[diff]
    tool = nvim
    submodule = log
    colorMoved = zebra
[difftool]
    prompt = true
[difftool "code"]
    cmd = code --wait --diff \"$LOCAL\" \"$REMOTE\"
[difftool "nvim"]
    cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
[difftool "vscodium"]
    cmd = vscodium --wait --diff \"$LOCAL\" \"$REMOTE\"
[fetch]
    prune = true
[format]
    signOff = true
[init]
    defaultBranch = main
[merge]
    conflictstyle = diff3
    tool = nvim
[mergetool]
    prompt = false
[mergetool "code"]
    cmd = code --wait \"$MERGED\"
[mergetool "nvim"]
    cmd = nvim -f -c \"Gdiffsplit!\" \"$MERGED\"
[mergetool "vscodium"]
    cmd = vscodium --wait \"$MERGED\"
[pull]
    rebase = true
[push]
    gpgSign = if-asked
[alias]
    aa = am --abort
    br = branch -vv
    cs = commit -s
    ca = commit --amend
    can = commit --amend --no-edit
    canv = can --no-verify
    cm = "!f(){\
            NUM=${1:-0};\
            git commit -m \"temp $NUM\";\
        };f"
    cnv = commit --no-verify
    cp = cherry-pick
    cpa = cherry-pick --abort
    cpf = "!git can && git pf"
    crc = "!git can && git rc"
    fa = fetch --all
    get-hash = log --format="%H" -n1
    line = log --oneline --graph
    lines = line --name-status
    lnra = "!f(){\
            git line ${1:-master}..${2:-HEAD};\
        };f"
    lp = log -p
    lpra = "!f(){\
            git lp ${1:-master}..${2:-HEAD};\
        };f"
    lpr = "!f(){\
            git lp --reverse ${1:-master}..${2:-HEAD};\
        };f"
    lr = "!f(){\
            git log --reverse ${1:-master}..${2:-HEAD};\
        };f"
    lost = log --oneline --stat
    pf = push -f
    pu = push -u
    ra = rebase --abort
    rc = rebase --continue
    ret = rebase --edit-todo
    rh = reset --hard
    ri = rebase -i
    ro = "!f(){\
            CURRENT=$(git rev-parse --abbrev-ref @);\
            test $# -gt 1 && { \
                BRANCH=$2; \
                TRACKING=$1; \
            } || { \
                BRANCH=$1; \
                TRACKING=origin; \
            }; \
            git rebase $(git get-hash $TRACKING/$BRANCH) --onto $BRANCH;\
        };f"
    rv = remote -v
    save = commit -m "Save" --no-gpg-sign --no-verify
    ski = stash push --keep-index
    ssp = stash show -p
    sd = stash drop
    sl = stash list
    sp = stash pop
    st = status -sb
    staged = diff --cached
    stash-staged = "!git ski && \
            git commit --no-verify -m 'temp' && \
            git stash && \
            git rh @~ && \
            git stash pop"
    top = rev-parse --show-toplevel
    update = "!f(){\
            BEFORE=$(git stash list | wc -l); \
            git stash --keep-index; \
            AFTER=$(git stash list | wc -l); \
            test $# -gt 1 && { \
                BRANCH=$2; \
                TRACKING=$1; \
            } || { \
                BRANCH=$1; \
                TRACKING=origin; \
            }; \
            hash=$(git get-hash $BRANCH); \
            git fa; \
            git checkout $BRANCH; \
            git pull $TRACKING $BRANCH; \
            git checkout -; \
            git ro $TRACKING $BRANCH && \
            test $BEFORE = $AFTER || git stash pop; \
        };f"
